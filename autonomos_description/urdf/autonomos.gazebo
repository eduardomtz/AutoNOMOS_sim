<?xml version="1.0"?>
<robot>

  <gazebo reference="base_link">
    <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="back_left_wheel_link">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="back_right_wheel_link">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="front_left_bar_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="front_right_bar_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="ackermann_bar_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="steer_link">
    <material>Gazebo/Red</material>
  </gazebo>
  <gazebo reference="front_left_wheel_link">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="front_right_wheel_link">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="laser_link">
    <material>Gazebo/Green</material>
  </gazebo>
  <gazebo reference="camera_link">
    <material>Gazebo/White</material>
  </gazebo>

<!-- Gazebo Ackermann loop joints -->
  <!-- en urdf un link no puede estar en multiples hijos -->
  <gazebo>
      <joint name='ackermann_left_bar_joint' type='revolute'>
      <parent>front_left_bar_link</parent>
      <child>ackermann_bar_link</child>
      <axis>
        <xyz>0.000000 0.000000 1.000000</xyz>
        <limit>
          <lower>-10000000000000000.000000</lower>
          <upper>10000000000000000.000000</upper>
        </limit>
        <dynamics/>
      </axis>
      <pose>0.000000 0.060000 0.000000 0.000000 0.000000 0.000000</pose>
    </joint>
  
      <joint name='ackermann_right_bar_joint' type='revolute'>
      <parent>front_right_bar_link</parent>
      <child>ackermann_bar_link</child>
      <axis>
        <xyz>0.000000 0.000000 1.000000</xyz>
        <limit>
          <lower>-10000000000000000.000000</lower>
          <upper>10000000000000000.000000</upper>
        </limit>
        <dynamics/>
      </axis>
      <pose>0.000000 -0.060000 0.000000 0.000000 0.000000 0.000000</pose>
    </joint>

<!--
  
      <sensor name="laser" type="ray">
        <pose>0.01 0 0.06 0 0 0</pose>
        <ray>
          <scan>
            <horizontal>
              <samples>360</samples>
              <resolution>1</resolution>
              <min_angle>0</min_angle>
              <max_angle>6.28318530718</max_angle>
            </horizontal>
          </scan>
          <range>
            <min>0.08</min>
            <max>3</max>
            <resolution>0.01</resolution>
          </range>
        </ray>
        <plugin name="laser" filename="libgazebo_ros_laser.so"> 
          <robotNamespace>autonomos</robotNamespace>
          <topicName>/scan</topicName> 
          <frameName>map</frameName> 
        </plugin>
        <always_on>1</always_on>
        <update_rate>1</update_rate>
        <visualize>true</visualize>
      </sensor>
  
-->

     <sensor type="camera" name="camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.  
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <!-- Keep this zero, update_rate will control the frame rate -->
        <updateRate>0.0</updateRate>
        <cameraName>app/camera</cameraName>
        <imageTopicName>rgb/image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>

  <!-- ros_control plugin 
   <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
    <robotNamespace>/autonomos</robotNamespace>
   </plugin>
  -->

  <!--
  <plugin name="imu" filename="libhector_gazebo_ros_imu.so">
      <robotNamespace>$(arg prefix)</robotNamespace>
      <serviceName>$(arg prefix)/imu/calibrate</serviceName>
      <updateRate>200.0</updateRate>
      <bodyName>imu_link</bodyName>
      <frameId>imu_link</frameId>
      <topicName>imu/imu</topicName>
      <rpyOffset>0 0 0</rpyOffset>
      <xyzOffset>0 0 0</xyzOffset>
      <gaussianNoise>0.00000001</gaussianNoise>
      <accelDrift>0.00000001 0.00000001 0.00000001</accelDrift>
      <accelDriftFrequency>0.00000001 0.00000001 0.00000001</accelDriftFrequency>
      <accelGaussianNoise>0.00000001 0.00000001 0.00000001</accelGaussianNoise>
      <rateDrift>0.0 0.0 0.0</rateDrift>
      <rateDriftFrequency>0.0 0.0 0.0</rateDriftFrequency>
      <rateGaussianNoise>0.0 0.0 0.0</rateGaussianNoise>
      <headingDrift>0.0 0.0 0.0</headingDrift>
      <headingDriftFrequency>0.0 0.0 0.0</headingDriftFrequency>
      <headingGaussianNoise>0.0 0.0 0.0</headingGaussianNoise>
  </plugin>
  -->

  <plugin name="test_control" filename="libautonomos_plugin.so">
      <debug>True</debug>
  </plugin>
  

<!--
 
   <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
	 <alwaysOn>true</alwaysOn>
	 <updateRate>20</updateRate>
	 <leftJoint>back_left_wheel_joint</leftJoint>
	 <rightJoint>back_right_wheel_joint</rightJoint>
	 <wheelSeparation>0.15</wheelSeparation>
	 <wheelDiameter>0.04</wheelDiameter>
	 <torque>20.0</torque>
	 <commandTopic>cmd_vel</commandTopic>
	 <odometryTopic>odom</odometryTopic>
	 <odometryFrame>base_link</odometryFrame>
	 <robotBaseFrame>base_footprint</robotBaseFrame>
    </plugin>
  
-->
   </gazebo>
</robot>
